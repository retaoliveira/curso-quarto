[
  {
    "objectID": "zotero-quarto.html",
    "href": "zotero-quarto.html",
    "title": "Zotero no Quarto",
    "section": "",
    "text": "O Quarto suporta arquivos bibliográficos em uma grande variedade de formatos, incluindo BibLaTeX e CSL. Adicione uma bibliografia ao seu documento usando o campo de metadados da bibliografia YAML. Por exemplo:\n---\ntitle: \"My Document\"\nbibliography: references.bib\n---\nO Quarto utilizará Pandoc para gerar automaticamente citações e uma bibliografia em vários estilos. Para usar esse recurso, você precisará:\n\nUm documento quarto formatado com citações (ver Citation Markdown).\nUma fonte de dados bibliográficos, por exemplo, um arquivo BibLaTeX (.bib) ou BibTeX (.bibtex).\nOpcionalmente, um arquivo CSL que especifica a formatação a ser usada na geração das citações e bibliografia. Baixe o arquivo CSL de interesse no repositório do Zotero ou em outra fonte de arquivos CSL confiável. Usando o Better Biblatex ou o Bibtex, o formato da citação e da lista de referências já é exportado na gereção do arquivo de referências.\n\nVocê pode fornecer mais de um arquivo bibliográfico, se desejar, definindo o valor do campo bibliográfico para uma matriz YAML.\n\n\n\nO Quarto utiliza a representação padrão Pandoc markdown para citações (por exemplo [@citação]) - as citações vão dentro de colchetes e são separadas por ponto-e-vírgula. Cada citação deve ter uma chave, composta de ‘@’ + o identificador da citação do banco de dados. A chave de citação deve começar com uma letra, dígito, ou _, e pode conter alfanuméricos, _, e caracteres de pontuação interna (:.#$%&-+?<>~~/). Aqui estão alguns exemplos:\n\n\n\nFormato Markdown\nCitação por nome dos autores\nCitação em formato numérico\n\n\n\n\nBlah Blah [see @knuth1984, pp. 33-35;\nalso @wickham2015, chap. 1]\nBlah Blah (see Knuth 1984, 33–35; also Wickham 2015, chap. 1)\nBlah Blah see [1], pp. 33-35; also [1], chap. 1\n\n\nBlah Blah [@knuth1984, pp. 33-35,\n38-39 and passim]\nBlah Blah (Knuth 1984, 33–35, 38–39 and passim)\nBlah Blah [1], pp. 33-35, 38-39 and passim\n\n\nBlah Blah [@wickham2015; @knuth1984].\nBlah Blah (Wickham 2015; Knuth 1984).\nBlah Blah [1, 2].\n\n\nWickham says blah [-@wickham2015]\nWickham says blah (2015)\nWickham says blah [1]\n\n\n\nou também pode escrever citações em texto, como se segue:\n\n\n\nFormato markdown\nCitação por nome dos autores\nCitação em formato numérico\n\n\n\n\n@knuth1984 says blah.\nKnuth (1984) says blah.\n[1] says blah.\n\n\n@knuth1984 [p. 33] says blah.\nKnuth (1984, 33) says blah.\n[1] [p. 33] says blah.\n\n\n\nConsulte a documentação da Pandoc Citations para obter informações adicionais sobre a sintaxe da citação.\n\n\n\nO Quarto utiliza Pandoc para formatar citações e bibliografias. Por padrão, a Pandoc usará o formato Chicago Manual of Style author-date, mas você pode especificar uma formatação personalizada usando CSL (Citation Style Language). Para fornecer o estilo de citação personalizada, forneça um caminho para um arquivo CSL usando o campo de metadados csl em seu documento, por exemplo:\n---\ntitle: \"My Document\"\nbibliography: references.bib\ncsl: nature.csl\n---\nYou pode encontrar arquivos CSL ou aprender mais sobre o uso de estilos no CSL Project. Você pode consultar a lista de mais de 8.500 definições Creative Commons de CSL no Projeto CSL central repository ou utilizar o style repository do Zotero.\n\n\n\nPara acrescentar uma citação, digamos de um DOI,\n\n- Ir para Inserir > Citação\n- Escolha DOI no menu à esquerda\n- Cole o DOI do artigo ou livro que você deseja citar na caixa de busca e clique em search\n- Uma vez localizado o trabalho que você deseja citar, clique em Inserir\n\n\nÉ isso aí, você inseriu sua primeira citação! Isto criará automaticamente um arquivo .bib em seu diretório de trabalho, ou se você já tiver um, acrescentará a ele. Ele também adicionará um campo bibliográfico ao YAML de seu documento, que inserirá automaticamente suas referências no final.\nSe você estiver usando a sintaxe markdown, você também pode colar um DOI após o [@ e ele será pesquisado:\n\n\nMais algumas dicas sobre citações e referências:\nSe você quiser que suas referências estejam em uma nova seção, acrescente o cabeçalho dessa seção ao final de seu documento e suas referências serão colocadas após o mesmo.\nEste método funciona com documentos da Quarto independentemente do formato, assim você pode inserir citações da mesma forma em um artigo de periódico e em uma apresentação. Com apresentações, você provavelmente desejará suas referências no último slide. Adicionando um título de nível H2 como “Referências” as colocará em um novo slide.\nPara inserir uma citação no texto, marque a caixa “Usar citação no texto”.\nO mesmo menu pode ser usado para inserir citações de várias fontes, incluindo sua biblioteca Zotero.\n\n\n\n\nZotero é um popular gestor de referências gratuito e de código aberto. Se você usa Zotero, você também pode inserir citações diretamente de suas bibliotecas Zotero. Se você tiver o Zotero instalado localmente, sua localização será detectada automaticamente e citações de sua biblioteca principal (Minha biblioteca) estarão disponíveis:\n\nAs referências Zotero também aparecerão automaticamente nos complementos:\n\nOs itens do Zotero aparecerão ao lado de itens de sua bibliografia com um pequeno logotipo “Z” justaposto sobre eles. Se você inserir uma citação de Zotero que ainda não esteja em sua bibliografia, ela será automaticamente acrescentada à bibliografia.\n\n\nOs Grupos Zotero proporcionam uma maneira poderosa de compartilhar coleções com uma classe ou trabalhar de perto com colegas em um projeto. Por padrão, as Bibliotecas do Grupo Zotero não estão incluídas no diálogo de Inserir Citação ou de Completar Citação. Entretanto, há opções disponíveis para usar bibliotecas de grupo em nível global, por projeto ou por documento.\nPor exemplo, aqui especificamos uma opção de nível de projeto para usar a biblioteca de grupo Série de Pesquisa Reproduzível (Ano 1):\n\nVocê também pode especificar uma ou mais bibliotecas dentro da YAML. Por exemplo, uma ou mais bibliotecas dentro da YAML:\n---\ntitle: \"Reproducible Research\"\nzotero: \"Reproducible Research Series (Year 1)\"\n---"
  },
  {
    "objectID": "image.html",
    "href": "image.html",
    "title": "magick",
    "section": "",
    "text": "Codelogo <- image_read('_site/reta.jpg')\nlogo <- image_transparent(logo, 'white')\nimage_write(logo, path = \"_site/reta.png\", format = \"png\")\n\n\n\nCode# clean image and write to disk\nclean_img_transparent <- function(img_url, trim = FALSE){\n  \n  # find the name of the img and extract it\n  img_name <- str_replace(img_url, \".*[/]([^.]+)[.].*\", \"\\\\1\")\n  \n  # some images need to be trimmed\n  trim_area <- if(isTRUE(trim)){\n    geometry_area(0, 0, 0, 10)\n  } else {\n    geometry_area(0, 0, 0, 0)\n  }\n  \n  img_url %>% \n    image_read() %>% \n    image_crop(geometry = trim_area) %>% \n    image_fill(\n      color = \"transparent\", \n      refcolor = \"white\", \n      fuzz = 4,\n      point = \"+1+1\" # start at top left 1 pixel in\n      ) \n}\n\n\n\nCodeclean_img_transparent(\"_site/reta.jpg\")\n\n\n\nCodeimage_write(logo, path = \"_site/reta.png\", format = \"png\")"
  },
  {
    "objectID": "intro-quarto.html",
    "href": "intro-quarto.html",
    "title": "Introdução",
    "section": "",
    "text": "Quarto é a próxima geração do RMarkdown do RStudio, e inclui dezenas de novos recursos e capacidades, ao mesmo tempo em que é capaz de renderizar a maioria dos arquivos .Rmd existentes sem modificações.\nVocê editará o código e o markdown no RStudio da mesma forma que faria com qualquer documento computacional (por exemplo, R Markdown), e visualizará o documento renderizado na aba Viewer enquanto você trabalha.\nA extensão dos documentos Quarto é .qmd (à esquerda) junto com sua versão renderizada como HTML (à direita). Você também pode optar por renderizá-lo em outros formatos como PDF, MS Word, etc.\n\n\n\n\n\nEste é o método básico para a publicação no Quarto - pegar um documento fonte e renderizá-lo em uma variedade de formatos de saída.\nSiga os passos descritos abaixo.\n\nBaixe e instale o último lançamento do RStudio (v2022.07):\n\n\n\n\n\n\n Download RStudio v2022.07\n\n\n\nCertifique-se de que você instalou os pacotes tidyverse e palmerpenguins:\ninstall.packages(\"tidyverse\")\ninstall.packages(\"palmerpenguins\")\nBaixe o documento Quarto (.qmd) abaixo, abra-o no RStudio, e clique em  Render.\n\n\n\n\n\n\n Download hello.qmd"
  },
  {
    "objectID": "intro-quarto.html#renderizando",
    "href": "intro-quarto.html#renderizando",
    "title": "Introdução",
    "section": "Renderizando",
    "text": "Renderizando\nUse o botão  Render no IDE RStudio para renderizar o arquivo e visualizar a saída com um único clique ou atalho de teclado (⇧⌘K).\n\n\n\n\n\nSe você preferir renderizar automaticamente sempre que salvar, você pode verificar a opção Render em Salvar na barra de ferramentas do editor. A pré-visualização será exibida sempre que você renderizar novamente o documento. A pré-visualização lado a lado funciona tanto para saídas HTML como para PDF.\n\n\n\n\n\nObserve que os documentos também podem ser resultados a partir do console R utilizando o pacote quarto*:\ninstall.packages(\"quarto\")\nquarto::quarto_render(\"notebook.Rmd\")\nAo renderizar, o Quarto gera um novo arquivo que contém texto, código e resultados selecionados a partir do arquivo .qmd. O novo arquivo pode ser um HTML, PDF, MS Word document, apresentação, website, livro, documento interativo, ou outro formato."
  },
  {
    "objectID": "intro-quarto.html#criando-documentos",
    "href": "intro-quarto.html#criando-documentos",
    "title": "Introdução",
    "section": "Criando documentos",
    "text": "Criando documentos\nNa imagem abaixo podemos ver o mesmo documento nos dois modos do editor do RStudio: visual (à esquerda) e fonte (à direita). O editor visual do RStudio oferece uma experiência de autoria WYSIWYM por markdown. Para formatação você pode utilizar a barra de ferramentas, um atalho de teclado (⌘B), ou a construção de marcação para formato (** negrito**). O código fonte em texto puro subjacente ao documento é escrito por você e você pode visualizá-lo/editá-lo em qualquer ponto, mudando para o modo fonte para edição. Você pode alternar entre estes dois modos clicando em Source* e Visual* na barra de ferramentas do editor (ou usando o atalho de teclado ⌘⇧ F4).\n\n\n\n\n\nA seguir, vamos voltar nossa atenção para o conteúdo de nosso documento Quarto. O arquivo contém três tipos de conteúdo: um cabeçalho YAML, pedaços de código e texto em markdown.\n\nCabeçalho YAML\nÉ um cabeçalho (opcional) YAML demarcado por três traços (---) em ambas as extremidades.\nQuando renderizado, o título, \"Olá, Quarto\", aparecerá no topo do documento com um tamanho de fonte maior do que o resto do documento. Os outros dois campos YAML denotam que a saída deve estar em formato “html” e o documento deve abrir no “editor” “visual”, por padrão.\nA sintaxe básica da YAML utiliza pares de valores chave no formato “chave: valor”. Outros campos do YAML comumente encontrados em cabeçalhos de documentos incluem metadados como “autor”, “subtítulo”, “data”, assim como opções de personalização como “tema”, “cor de botão”, “largura de figura”, etc. Você pode aprender sobre todos os campos YAML disponíveis para documentos HTML aqui. Os campos YAML disponíveis variam de acordo com o formato do documento, por exemplo, veja aqui para documentos em PDF e aqui para MS Word.\n\n\nChunks de código\nPedaços de código são identificados com {r} com opções (opcionais) em estilo YAML, identificados por #| no início da linha.\n```{r}\n#| label: load-packages\n#| include: false\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\nNeste caso, o “rótulo” do trecho de código é “load-packages” e nós definimos “include” para “false” para indicar que não queremos o trecho em si ou nenhuma de suas saídas nos documentos apresentados.\nAlém de renderizar o documento completo para visualizar os resultados dos trechos de código, você também pode executar cada trecho de código interativamente no editor do RStudio, clicando no ícone  ou atalho de teclado (⇧⌘⏎). O RStudio executa o código e exibe os resultados em linha dentro de seu arquivo ou no Console, dependendo de sua preferência.\n\n\n\n\n\n\nTexto markdown\nTexto markdown possui formatação, incluindo cabeçalhos de seção, hyperlinks, uma imagem embutida e um trecho de código em linha.\n\n\n\n\n\nO Quarto usa a sintaxe markdown para o texto. Se usar o editor visual, você não precisará aprender muita sintaxe de markdown para criar seu documento, pois você pode usar os menus e atalhos para adicionar um cabeçalho, texto em negrito, inserir uma tabela, etc. Se utilizar o editor do código fonte, você poderá formatar o texto com expressões marcadas como ##, ***negrito**, etc."
  },
  {
    "objectID": "intro-quarto.html#como-funciona",
    "href": "intro-quarto.html#como-funciona",
    "title": "Introdução",
    "section": "Como funciona",
    "text": "Como funciona\nQuando você apresenta um documento da Quarto, primeiro o knitr executa todos os trechos de código e cria um novo documento markdown (.md) que inclui o código e sua saída. O arquivo de markdown gerado é então processado pelo pandoc, que cria o formato final. O botão Render encapsula estas ações e as executa na ordem correta para você."
  }
]