---
title: "Article Layout"
format: html
reference-location: margin
citation-location: margin
aliases:
  - page-layout.html
---

## Overview

Quarto supports a variety of page layout options that enable you to author content that:

-   Fills the main content region
-   Overflows the content region
-   Spans the entire page
-   Occupies the document margin

Quarto uses the concept of columns to describe page layout (e.g. the "body" column, the "margin" column, etc.). Below we'll describe how to arrange content into these columns.

All of the layout capabilities described in this document work for HTML output and many work for PDF and LaTeX output. For details about the PDF / LaTeX output, see [PDF/LaTeX Layout].

## Body Column

By default, elements are position in the body of the document and are allowed to span the content of the document, like the below.

::: {.layout-example .column-body}
.column-body
:::

But if you'd like, you can extend content slightly outside the bounds of the body by creating a div with the .`column-body-outset` class. For example:

``` markdown
:::{.column-body-outset}
Outset content...
:::
```

::: {.layout-example .column-body-outset}
.column-body-outset
:::

## Page Column

If you need even more space for your content, you can use the `.column-page` class to make the content much wider, though stopping short of extending across the whole document.

::: {.layout-example .column-page}
.column-page
:::

For example, to create a wider image, you could use:

``` markdown
:::{.column-page}
![](images/elephant.jpg)
:::
```

::: column-page
![](images/elephant.jpg){fig-alt="Three walking elephants in silhouette against the backdrop of a sunset."}
:::

For computational output, you can specify the page column in your code cell options. For example:

```{r}
#| column: page
#| echo: fenced

knitr::kable(
  mtcars[1:6, 1:10]
)
```

In addition, you can use `.column-page-inset` to inset the element from the page slightly, like so:

::: {.layout-example .column-page-inset}
.column-page-inset
:::

## Screen Column

You can have content span the full width of the page with no margin (full bleed). For this, use the `.column-screen` class or specify `column: screen` on a code cell. For example:

``` md
::: {.column-screen}
![A full screen image](/image.png)
:::
```

::: {.layout-example .column-screen}
.column-screen
:::

The following code displays a Leaflet map across the whole page.

